buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

group = 'com.rgfp.scrumdeveloper'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


sonarqube {
	properties {
		property 'sonar.organization','rgaete-github'
		property 'sonar.host.url','https://sonarcloud.io'
		property 'sonar.login','d0ebdcfcd63d60b4bdabf17d4d1b678f75687f8c'
	}
}
/*
jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}
*/

jacocoTestReport {
	group = "Reporting"
	description = "Generate Jacoco coverage reports after running tests."
	executionData = fileTree(dir: 'build/jacoco', include: '**/*.exec')
	sourceDirectories = files('src/java')
	classDirectories =  files('build/classes/main')
}